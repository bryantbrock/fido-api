generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guard {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  email         String          @unique
  passhash      String
  bio           String?
  line1         String?
  line2         String?
  city          String?
  state         String?
  zip           String?
  name          String?
  avatar        String?
  rate          Int?
  avgRating     Float?
  occupation    String?
  reviews       Review[]
  hirings       Hire[]
  GuardFeatures GuardFeatures[]
}

model Guarded {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  passhash  String
  name      String?
  line1     String?
  line2     String?
  city      String?
  state     String?
  zip       String?
  avatar    String?
  avgRating Float?
  reviews   Review[]
  hirings   Hire[]
}

model Hire {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  amount        Int
  fees          Int?
  discounts     Int?
  payment       String
  endDateTime   DateTime?
  startDateTime DateTime?
  line1         String?
  line2         String?
  city          String?
  state         String?
  zip           String?
  guard         Guard     @relation(fields: [guardId], references: [id])
  guardId       Int
  guarded       Guarded   @relation(fields: [guardedId], references: [id])
  guardedId     Int
  reviews       Review[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  title     String
  content   String?
  rating    Int
  guard     Guard    @relation(fields: [guardId], references: [id])
  guardId   Int
  guarded   Guarded  @relation(fields: [guardedId], references: [id])
  guardedId Int
  hire      Hire?    @relation(fields: [hireId], references: [id])
  hireId    Int?
}

model GuardFeatures {
  id                        Int      @id @default(autoincrement())
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @default(now())
  guard                     Guard    @relation(fields: [guardId], references: [id])
  guardId                   Int      @unique
  yearsOfMilitaryExpeirence Int?
  hasGeoTrackingEnabled     Boolean?
  hasMicrophoneEnabled      Boolean?
  hasBodyCamEnabled         Boolean?
  hasInsurance              Boolean?
  hasBackgroundCheck        Boolean?
  hasASRBCertification      Boolean?
  hasAPOSTCertification     Boolean?
  hasCprCertification       Boolean?
  hasFirstAidCertification  Boolean?
  hasOwnTransportation      Boolean?
  hasOwnWeapon              Boolean?
  hasOwnUniform             Boolean?
}
